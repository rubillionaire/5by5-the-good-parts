#!/usr/bin/env node

const fs = require( 'fs' )
const path = require( 'path' )
const entities = require( 'entities' )
const xml2js = require( 'xml2js' )
const async = require( 'async' )

const channels = [
  {
    file: 'afterdark',
    showName: 'after dark',
    abbreviation: 'ad',
  },
  {
    file: 'b2w',
    showName: 'back to work',
    abbreviation: 'bw',
  },
  {
    file: 'buildanalyze',
    showName: 'build and analyze',
    abbreviation: 'ba',
  },
  {
    file: 'hypercritical',
    showName: 'hypercritical',
    abbreviation: 'hc',
  },
  {
    file: 'talkshow',
    showName: 'the talk show',
    abbreviation: 'ts',
  },
]

async.map( channels, channelsToShows, handleShows )

function channelsToShows ( channel, callback ) {
  const feed = fs.readFileSync( path.join(__dirname, channel.file) ).toString()
  xml2js.parseString( feed, { noValidation: true }, function ( err, d ) {
    callback( err, d.rss.channel[ 0 ].item )
  } )
}

function handleShows ( err, shows ) {
  shows = shows
    .reduce( function ( prev, curr ) {
      return prev.concat( curr )
    }, [] )
    .map( function ( show, index ) {
      delete show.link
      delete show.author
      delete show.description
      delete show[ 'itunes:author' ]
      delete show[ 'itunes:duration' ]
      delete show[ 'itunes:subtitle' ]
      delete show[ 'itunes:summary' ]
      delete show[ 'itunes:keywords' ]
      delete show[ 'atom:link' ]
      return show
    } )
    .sort( function ( a, b ) {
      const ad = new Date( a.pubDate[ 0 ] )
      const bd = new Date( b.pubDate[ 0 ] )
      return ad - bd
    } )

  fs.writeFileSync(
    path.join(__dirname, '..', 'public', 'shows.json'),
    JSON.stringify( { shows, channels } )
  )
}
